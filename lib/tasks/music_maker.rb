require 'find'
class MusicMaker
  def self.scan_path(path)
    if File.directory?(path) 
      puts "Dir: #{path}"      
      first = true
      count = 0
      Find.find(path) do |x|
        count = count + 1
        if first #or count > 50
          first = false
        else
          if !File.directory?(x)
            add_track(x)
          end
        end
      end
    else
      add_track(path)
    end
  end
  
  def self.add_track(path)
    raise ArgumentError, "Must supply a path to a file to add a track" if File.directory?(path)
    puts "File: #{path}"
    Mp3Info.open(path) do |mp3info|
      track = Track.from_id3tag(mp3info.tag)
      if(track.album.new_record?)
        download = Download.new(:approved => false, :active => true, :created_by => 0)
        if track.album.scrobble_record and track.album.scrobble_record.top_tags 
          track.album.scrobble_record.top_tags.each do |t|
            download.tag_list.add(t.name) 
          end
        end
        release = Release.new(:release_type => ReleaseType.find(4))
        release.download = download
        download.releases << release
        
        download.resource = track.album
        track.album.download = download
      end
      
      track.album.download.releases.first.locations << Location.new(:location => path)
      track.autogenerated = true
      
      if !track.save
        pp track.errors
        pp track.album.errors
        pp track.artist.errors
      end
    end
  end
end