require 'find'
class MusicMaker
  def self.scan_path(path)
    if File.directory?(path) 
      first = true
      count = 0
      Find.find(path) do |x|
        count = count + 1
        if first #or count > 50
          first = false
        else
          if !File.directory?(x)
            add_track(x)
          end
        end
      end
    else
      begin
      add_track(path)
      rescue Exception => e
        puts "Error with path: "+e.message
        Floater.create!(:location => path, :guess => 'track', :release_id => '0')
      end
    end
  end
  
  def self.add_track(path)
    
    raise ArgumentError, "Must supply a path to a file to add a track" if File.ftype(path) != "file"
    raise ArgumentError, "File has no contents. " if ! ( File.size(path) > 0 ) 
    
    Mp3Info.open(path) do |mp3info|
      track = Track.from_id3tag(mp3info.tag)
      if(track.album.new_record?)
        download = Download.new(:approved => false, :active => true, :created_by => 0)
        if track.album.scrobble_record and track.album.scrobble_record.top_tags 
          track.album.scrobble_record.top_tags.each do |t|
            download.tag_list.add(t.name) 
          end
        end
        release = Release.new(:release_type => ReleaseType.find(4))
        release.download = download
        download.releases << release
      
        download.resource = track.album
        track.album.download = download
      end
    
      track.album.download.releases.first.locations << Location.new(:location => path)
      track.autogenerated = true
      
      track.save!
      return track if !track.nil? and !track.new_record?
    end
  end
end